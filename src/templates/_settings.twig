{% import '_includes/forms.twig' as forms %}
{# @var settings \wsydney76\propertiesfield\models\Settings #}


{# Deprecated
{{ forms.lightswitchField({
    label: 'Show table header'|t('_properties-field'),
    name: 'showTableHeader',
    on: settings.showTableHeader,
    onLabel: 'Show header columns (Property/Value)'|t('_properties-field'),
    warning: config.showTableHeader is defined ? _self.configWarning('showTableHeader')
}) }}
#}


{{ forms.selectField({
    label: 'View Mode for entries sub-fields'|t('_properties-field'),
    name: 'entriesViewMode',
    value: settings.entriesViewMode,
    options: [
        {label: 'Cards'|t('_properties-field'), value: 'cards'},
        {label: 'List'|t('_properties-field'), value: 'list'},
    ],
    warning: config.entriesViewMode is defined ? _self.configWarning('entriesViewMode')
}) }}

{{ forms.selectField({
    label: 'View Mode for assets sub-fields'|t('_properties-field'),
    name: 'assetsViewMode',
    value: settings.assetsViewMode,
    options: [
        {label: 'Cards'|t('_properties-field'), value: 'cards'},
        {label: 'List'|t('_properties-field'), value: 'list'},
    ],
    warning: config.assetsViewMode is defined ? _self.configWarning('assetsViewMode')
}) }}

{{ forms.textField({
    label: 'Date Format'|t('_properties-field'),
    name: 'dateFormat',
    size: 8,
    value: settings.dateFormat,
    instructions: 'The output format for date fields'|t('_properties-field'),
    warning: config.dateFormat is defined ? _self.configWarning('dateFormat')
}) }}

{{ forms.textField({
    label: 'Date Time Format'|t('_properties-field'),
    name: 'dateTimeFormat',
    size: 8,
    value: settings.dateTimeFormat,
    instructions: 'The output format for date time fields'|t('_properties-field'),
    warning: config.dateTimeFormat is defined ? _self.configWarning('dateTimeFormat')
}) }}

{{ forms.textField({
    label: 'Currency'|t('_properties-field'),
    name: 'currency',
    size: 8,
    value: settings.currency,
    instructions: 'The currency used for money fields'|t('_properties-field'),
    warning: config.currency is defined ? _self.configWarning('currency')
}) }}

{{ forms.textField({
    label: 'Custom template directory'|t('_properties-field'),
    name: 'customTemplateDir',
    value: settings.customTemplateDir,
    instructions: 'If custom properties or previews are used, this is the folder inside a projects `template` directory where the templates live.'|t('_properties-field'),
    tip: 'This directory will be registered as a template root in the `cp` template mode. You can leave this blank if your project registers its own template root.'|t('_properties-field'),
    warning: config.customTemplateDir is defined ? _self.configWarning('customTemplateDir')
}) }}


{{ forms.lightswitchField({
    label: 'Enable element query helpers'|t('_properties-field'),
    name: 'enableElementQueryHelpers',
    on: settings.enableElementQueryHelpers,
    onLabel: 'Enable methods like propEquals(), propValueSql()...'|t('_properties-field'),
    warning: config.enableElementQueryHelpers is defined ? _self.configWarning('enableElementQueryHelpers')
}) }}

{{ forms.lightswitchField({
    label: 'Enable dynamic properties'|t('_properties-field'),
    name: 'enableDynamicProperties',
    on: settings.enableDynamicProperties,
    onLabel: 'Enable the ability to define property type dynamically via content as opposed to project config'|t('_properties-field'),
    warning: config.enableDynamicProperties is defined ? _self.configWarning('enableDynamicProperties')
}) }}

{{ forms.textField({
    label: 'Field handle for dynamic properties'|t('_properties-field'),
    name: 'dynamicPropertiesFieldHandle',
    value: settings.dynamicPropertiesFieldHandle,
    instructions: 'The handle of a custom field of type `Property Set` that holds the property config.'|t('_properties-field'),
    warning: config.dynamicPropertiesFieldHandle is defined ? _self.configWarning('dynamicPropertiesFieldHandle')
}) }}

{% macro configWarning(setting) -%}
    {{ 'This is being overridden by the `{setting}` config setting and cannot be changed here.'|t('_properties-field', {setting: setting })|markdown(inlineOnly=true) }}
{%- endmacro %}